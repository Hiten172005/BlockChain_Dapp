{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_bankRegistryAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "bankAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					}
				],
				"name": "CreditDataAdded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_entryDetails",
						"type": "string"
					}
				],
				"name": "addCreditEntry",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankRegistryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "entryCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					}
				],
				"name": "getUserCreditHistory",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "entryId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "entryDetails",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "reportingBank",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct CreditDataLedger.CreditEntry[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userCreditHistory",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "entryDetails",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "reportingBank",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Divij (with Gemini)",
			"events": {
				"CreditDataAdded(address,address,uint256)": {
					"params": {
						"bankAddress": "The address of the bank that submitted the data.",
						"entryId": "The unique ID of this new credit entry.",
						"userAddress": "The address of the customer whose credit is being updated."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"addCreditEntry(address,string)": {
					"params": {
						"_entryDetails": "A string containing the details of the credit event (e.g., loan status).",
						"_userAddress": "The address of the customer whose credit history is being updated."
					}
				},
				"constructor": {
					"params": {
						"_bankRegistryAddress": "The address of the deployed BankRegistry contract."
					}
				},
				"getUserCreditHistory(address)": {
					"params": {
						"_userAddress": "The address of the customer to look up."
					},
					"returns": {
						"_0": "An array of CreditEntry structs containing the customer's full history."
					}
				}
			},
			"title": "CreditDataLedger",
			"version": 1
		},
		"userdoc": {
			"events": {
				"CreditDataAdded(address,address,uint256)": {
					"notice": "Emitted when new credit data is successfully added for a user. Events create a log on the blockchain that external applications can listen to."
				}
			},
			"kind": "user",
			"methods": {
				"addCreditEntry(address,string)": {
					"notice": "Allows a registered bank to add a new credit entry to a customer's history."
				},
				"constructor": {
					"notice": "The constructor is a special function that runs only once upon deployment. It permanently links this contract to the already deployed BankRegistry contract."
				},
				"getUserCreditHistory(address)": {
					"notice": "A public view function to retrieve the entire credit history for a specific customer. 'view' means this function only reads data and does not cost any gas to call."
				}
			},
			"notice": "This contract stores credit history and data submitted by authorized banks. It is linked to the BankRegistry contract to ensure that only verified institutions can add or modify credit records.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/CreditDataLedger.sol": "CreditDataLedger"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/CreditDataLedger.sol": {
			"keccak256": "0xbb41c5b8e0b70c94533d2f066bdf58f85727a542bde481b8ce34b4a77812a386",
			"license": "MIT",
			"urls": [
				"bzz-raw://0d4f868f27c0405f535e6d9485d2bcfad887771d71f6912ed5edb19575675aad",
				"dweb:/ipfs/QmQRNWdNrBU3jZmrphYExJQwHrjyr5ZN5e8fQRszzwX7xG"
			]
		}
	},
	"version": 1
}